{{- if and .Values.cli.enabled .Values.job.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "redforge-cli.fullname" . }}-scan
  labels:
    {{- include "redforge-cli.labels" . | nindent 4 }}
spec:
  activeDeadlineSeconds: {{ .Values.job.activeDeadlineSeconds }}
  backoffLimit: {{ .Values.job.backoffLimit }}
  template:
    metadata:
      labels:
        {{- include "redforge-cli.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ include "redforge-cli.serviceAccountName" . }}
      {{- end }}
      restartPolicy: Never
      securityContext:
        {{- toYaml .Values.cli.securityContext | nindent 8 }}
      containers:
      - name: redforge-cli
        image: "{{ .Values.cli.image.repository }}:{{ .Values.cli.image.tag }}"
        imagePullPolicy: {{ .Values.cli.image.pullPolicy }}
        command:
        - python
        - -m
        - redforge.cli
        args:
        - scan
        - {{ .Values.job.target }}
        - --output
        - /app/reports
        env:
        {{- toYaml .Values.cli.env | nindent 8 }}
        resources:
          {{- toYaml .Values.cli.resources | nindent 10 }}
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        {{- if .Values.persistence.enabled }}
        - name: reports
          mountPath: {{ .Values.persistence.mountPath }}
        {{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ include "redforge-cli.configMapName" . }}
      {{- if .Values.persistence.enabled }}
      - name: reports
        persistentVolumeClaim:
          claimName: {{ include "redforge-cli.fullname" . }}-reports
      {{- end }}
{{- end }}