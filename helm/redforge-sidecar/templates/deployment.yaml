apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "redforge-sidecar.fullname" . }}
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "redforge-sidecar.labels" . | nindent 4 }}
    app.kubernetes.io/component: guardrail-sidecar
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      {{- include "redforge-sidecar.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "redforge-sidecar.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: guardrail-sidecar
        security-policy: restricted
        {{- with .Values.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        # OPA Gatekeeper annotations
        {{- if .Values.opa.enabled }}
        gatekeeper.sh/mutation: "enabled"
        gatekeeper.sh/validation: "enabled"
        admission.gatekeeper.sh/ignore: "false"
        {{- end }}
        
        # Prometheus monitoring annotations
        {{- if .Values.monitoring.prometheus.enabled }}
        prometheus.io/scrape: "{{ .Values.monitoring.prometheus.scrape }}"
        prometheus.io/port: "{{ .Values.monitoring.prometheus.port }}"
        prometheus.io/path: "{{ .Values.monitoring.prometheus.path }}"
        {{- end }}
        
        # Security annotations
        container.apparmor.security.beta.kubernetes.io/sidecar: "runtime/default"
        {{- if .Values.app.enabled }}
        container.apparmor.security.beta.kubernetes.io/app: "runtime/default"
        {{- end }}
        
        # Pod Security Standards
        pod-security.kubernetes.io/enforce: "restricted"
        pod-security.kubernetes.io/audit: "restricted"
        pod-security.kubernetes.io/warn: "restricted"
        
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "redforge-sidecar.serviceAccountName" . }}
      
      # Security Context at Pod level
      securityContext:
        runAsNonRoot: {{ .Values.global.securityContext.runAsNonRoot }}
        runAsUser: {{ .Values.global.securityContext.runAsUser }}
        fsGroup: {{ .Values.global.securityContext.fsGroup }}
        seccompProfile:
          type: RuntimeDefault
      
      # Priority Class for scheduling
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      
      # Termination grace period
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      
      containers:
      {{- if .Values.app.enabled }}
      # Main Application Container
      - name: app
        image: "{{ .Values.global.imageRegistry }}/{{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}"
        imagePullPolicy: {{ .Values.app.image.pullPolicy | default .Values.global.imagePullPolicy }}
        
        ports:
        - name: http
          containerPort: {{ .Values.app.port }}
          protocol: TCP
        
        # Environment variables
        env:
        {{- range $key, $value := .Values.app.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        - name: ENVIRONMENT
          value: {{ .Values.global.environment }}
        
        # Volume mounts
        volumeMounts:
        - name: reports-volume
          mountPath: /var/reports
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        - name: tmp-volume
          mountPath: /tmp
        
        # Resource limits and requests
        resources:
          {{- toYaml .Values.app.resources | nindent 10 }}
        
        # Health checks
        livenessProbe:
          httpGet:
            path: {{ .Values.app.livenessProbe.httpGet.path }}
            port: {{ .Values.app.livenessProbe.httpGet.port }}
          initialDelaySeconds: {{ .Values.app.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.app.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.app.livenessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.app.livenessProbe.failureThreshold }}
          successThreshold: {{ .Values.app.livenessProbe.successThreshold | default 1 }}
        
        readinessProbe:
          httpGet:
            path: {{ .Values.app.readinessProbe.httpGet.path }}
            port: {{ .Values.app.readinessProbe.httpGet.port }}
          initialDelaySeconds: {{ .Values.app.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.app.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.app.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.app.readinessProbe.failureThreshold }}
          successThreshold: {{ .Values.app.readinessProbe.successThreshold | default 1 }}
        
        # Security context at container level
        securityContext:
          {{- toYaml .Values.app.securityContext | nindent 10 }}
      {{- end }}
      
      {{- if .Values.sidecar.enabled }}
      # RedForge Guardrail Sidecar Container
      - name: sidecar
        image: "{{ .Values.global.imageRegistry }}/{{ .Values.sidecar.image.repository }}:{{ .Values.sidecar.image.tag }}"
        imagePullPolicy: {{ .Values.sidecar.image.pullPolicy | default .Values.global.imagePullPolicy }}
        
        ports:
        - name: guardrail
          containerPort: {{ .Values.sidecar.port }}
          protocol: TCP
        
        # Environment variables
        env:
        {{- range $key, $value := .Values.sidecar.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        - name: ENVIRONMENT
          value: {{ .Values.global.environment }}
        {{- if .Values.app.enabled }}
        - name: DEMO_APP_URL
          value: "http://localhost:{{ .Values.app.port }}"
        {{- end }}
        
        # Volume mounts
        volumeMounts:
        - name: reports-volume
          mountPath: /var/reports
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        - name: tmp-volume
          mountPath: /tmp
        
        # Resource limits and requests
        resources:
          {{- toYaml .Values.sidecar.resources | nindent 10 }}
        
        # Health checks
        livenessProbe:
          httpGet:
            path: {{ .Values.sidecar.livenessProbe.httpGet.path }}
            port: {{ .Values.sidecar.livenessProbe.httpGet.port }}
          initialDelaySeconds: {{ .Values.sidecar.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.sidecar.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.sidecar.livenessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.sidecar.livenessProbe.failureThreshold }}
          successThreshold: {{ .Values.sidecar.livenessProbe.successThreshold | default 1 }}
        
        readinessProbe:
          httpGet:
            path: {{ .Values.sidecar.readinessProbe.httpGet.path }}
            port: {{ .Values.sidecar.readinessProbe.httpGet.port }}
          initialDelaySeconds: {{ .Values.sidecar.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.sidecar.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.sidecar.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.sidecar.readinessProbe.failureThreshold }}
          successThreshold: {{ .Values.sidecar.readinessProbe.successThreshold | default 1 }}
        
        # Security context at container level
        securityContext:
          {{- toYaml .Values.sidecar.securityContext | nindent 10 }}
      {{- end }}
      
      # Volumes
      volumes:
      - name: reports-volume
        {{- if eq .Values.volumes.reports.type "emptyDir" }}
        emptyDir:
          {{- with .Values.volumes.reports.medium }}
          medium: {{ . }}
          {{- end }}
          {{- with .Values.volumes.reports.sizeLimit }}
          sizeLimit: {{ . }}
          {{- end }}
        {{- end }}
      
      - name: config-volume
        configMap:
          name: {{ .Values.volumes.config.name | default (include "redforge-sidecar.fullname" .) }}
          defaultMode: 0644
      
      - name: tmp-volume
        emptyDir:
          sizeLimit: 100Mi
      
      # Node selection and affinity
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      restartPolicy: Always