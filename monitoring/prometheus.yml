# Prometheus 配置 - PSGuard Sidecar 监控
# 优化的抓取间隔：≤ 15s 以确保数据精度

global:
  scrape_interval: 10s          # 全局抓取间隔：10s
  evaluation_interval: 10s      # 规则评估间隔：10s
  external_labels:
    cluster: 'psguard-test'
    environment: 'testing'

# 规则文件
rule_files:
  - "alert_rules.yml"
  - "recording_rules.yml"

# 抓取配置
scrape_configs:
  # PSGuard Sidecar 应用指标
  - job_name: 'psguard-sidecar'
    scrape_interval: 10s
    scrape_timeout: 8s
    metrics_path: '/metrics'
    static_configs:
      - targets: ['psguard:8080']
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '([^:]+):(.*)'
        replacement: '${1}'
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_pod_container_name]
        target_label: container
        regex: 'psguard'
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'psguard_.*'
        action: keep

  # Kubernetes 节点指标
  - job_name: 'kubernetes-nodes'
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
      - role: node
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

  # Kubernetes Pod 指标
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name
      - source_labels: [__meta_kubernetes_pod_container_name]
        action: replace
        target_label: container

  # cAdvisor 容器指标
  - job_name: 'kubernetes-cadvisor'
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
      - role: node
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
    metric_relabel_configs:
      # 只保留 PSGuard 相关的容器指标
      - source_labels: [container_label_io_kubernetes_container_name]
        regex: 'psguard'
        action: keep
      # 保留重要的资源指标
      - source_labels: [__name__]
        regex: 'container_(cpu_usage_seconds_total|memory_working_set_bytes|network_receive_bytes_total|network_transmit_bytes_total|fs_io_time_seconds_total)'
        action: keep

  # K6 测试结果（如果使用 k6-prometheus-remote-write）
  - job_name: 'k6-load-test'
    scrape_interval: 5s
    static_configs:
      - targets: ['k6-prometheus-rw:8080']
    metrics_path: '/metrics'
    relabel_configs:
      - source_labels: [__name__]
        regex: 'k6_.*'
        action: keep

# 告警管理器配置
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# 远程写入配置（可选）
remote_write:
  - url: "http://prometheus-remote-storage:9201/write"
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500