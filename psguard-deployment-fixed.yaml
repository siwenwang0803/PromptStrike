apiVersion: v1
kind: Namespace
metadata:
  name: psguard-test
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: psguard
  namespace: psguard-test
  labels:
    app: psguard
    version: test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: psguard
  template:
    metadata:
      labels:
        app: psguard
        version: test
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: psguard
        image: psguard-sidecar:test
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 200m
            memory: 180Mi
          requests:
            cpu: 100m
            memory: 128Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        env:
        - name: NGINX_ENTRYPOINT_QUIET_LOGS
          value: "1"
        securityContext:
          runAsNonRoot: false
          allowPrivilegeEscalation: false
---
apiVersion: v1
kind: Service
metadata:
  name: psguard
  namespace: psguard-test
  labels:
    app: psguard
spec:
  selector:
    app: psguard
  ports:
  - port: 8080
    targetPort: 8080
    name: http
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: psguard-nodeport
  namespace: psguard-test
  labels:
    app: psguard
spec:
  selector:
    app: psguard
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 30080
    name: http
    protocol: TCP
  type: NodePort
