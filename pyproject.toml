[tool.poetry]
name = "promptstrike"
version = "0.1.0a0"
description = "Developer-first automated LLM red-team platform"
authors = ["PromptStrike Team <dev@promptstrike.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/siwenwang0803/PromptStrike"
repository = "https://github.com/siwenwang0803/PromptStrike"
documentation = "https://docs.promptstrike.com"
keywords = ["llm", "security", "red-team", "owasp", "ai-safety"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: Software Development :: Testing",
]

[tool.poetry.dependencies]
python = "^3.11"
click = "^8.1.7"
pydantic = "^2.5.0"
httpx = "^0.26.0"
rich = "^13.7.0"
typer = "^0.9.0"
openai = "^1.6.0"
chromadb = {version = "^0.4.18", optional = true}
tqdm = "^4.66.0"
jinja2 = "^3.1.2"
pyyaml = "^6.0.1"
python-dotenv = "^1.0.0"
tenacity = "^8.2.3"

[tool.poetry.extras]
ai-chunks = ["chromadb"]
all = ["chromadb"]

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.23.2"
black = "^23.12.0"
isort = "^5.13.0"
flake8 = "^6.1.0"
mypy = "^1.8.0"
pre-commit = "^3.6.0"
mkdocs = "^1.5.3"
mkdocs-material = "^9.5.0"

[tool.poetry.scripts]
promptstrike = "promptstrike.cli:main"
ps = "promptstrike.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["promptstrike"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "asyncio: marks tests as asyncio tests",
]